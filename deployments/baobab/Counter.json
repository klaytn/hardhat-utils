{
  "address": "0xc52b09C22Ee99b5A87E99AbC8f960D028A815aA5",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newNumber",
          "type": "uint256"
        }
      ],
      "name": "SetNumber",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "increment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "number",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "arr",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "bs",
          "type": "bytes"
        },
        {
          "internalType": "string",
          "name": "str",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "flag",
          "type": "bool"
        }
      ],
      "name": "setComplex",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newNumber",
          "type": "uint256"
        }
      ],
      "name": "setNumber",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x4be3c3a5aacf240ac086cd851b3dc9d8d9f8d6e6e9ac52ff967e8aff7ec224ae",
  "receipt": {
    "to": "0x4e59b44847b379578588920cA78FbF26c0B4956C",
    "from": "0x5d61ab646f7FC514ef447272a978904A01bBc027",
    "contractAddress": null,
    "transactionIndex": 0,
    "gasUsed": "603998",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0xce288e9b349d9184853d56dad7f2f3996a82026ef571499b473e72057b10c8fa",
    "transactionHash": "0x4be3c3a5aacf240ac086cd851b3dc9d8d9f8d6e6e9ac52ff967e8aff7ec224ae",
    "logs": [],
    "blockNumber": 143752147,
    "cumulativeGasUsed": "603998",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "a501eeaed81ff58dbbc43478f8902839",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newNumber\",\"type\":\"uint256\"}],\"name\":\"SetNumber\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"increment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"number\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"arr\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"bs\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"flag\",\"type\":\"bool\"}],\"name\":\"setComplex\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newNumber\",\"type\":\"uint256\"}],\"name\":\"setNumber\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Counter.sol\":\"Counter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Counter.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.13;\\n\\ncontract Counter {\\n    uint256 public number;\\n\\n    event SetNumber(uint256 newNumber);\\n\\n    function _setNumber(uint256 newNumber) private {\\n        number = newNumber;\\n        emit SetNumber(number);\\n    }\\n\\n    function setNumber(uint256 newNumber) public {\\n        _setNumber(newNumber);\\n    }\\n\\n    function increment() public {\\n        _setNumber(number + 1);\\n    }\\n\\n    // To test various argument types\\n    // Try hh send Counter setComplex 1,2,3 0xabcd \\\"zzz\\\" true\\n    // Try hh send Counter setComplex 7 0x \\\"\\\" false\\n    function setComplex(\\n        uint256[] calldata arr,\\n        bytes memory bs,\\n        string memory str,\\n        bool flag\\n    ) public {\\n        uint256 sum = 0;\\n        for (uint i = 0; i < arr.length; i++) {\\n            sum += arr[i];\\n        }\\n\\n        uint256 newNumber = sum;\\n        newNumber = newNumber * 16 + bs.length;\\n        newNumber = newNumber * 16 + bytes(str).length;\\n        newNumber = newNumber * 16 + (flag ? 1 : 0);\\n        _setNumber(newNumber);\\n    }\\n}\\n\",\"keccak256\":\"0x38fecfcd3cca79d9dbaf36ee3efca208125c326e0dfd3384095c81f918befb9b\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610713806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630b85b856146100515780633fb5c1cb1461006d5780638381f58a14610089578063d09de08a146100a7575b600080fd5b61006b60048036038101906100669190610474565b6100b1565b005b6100876004803603810190610082919061056a565b610173565b005b61009161017f565b60405161009e91906105a6565b60405180910390f35b6100af610185565b005b6000805b868690508110156100fa578686828181106100d3576100d26105c1565b5b90506020020135826100e5919061061f565b915080806100f290610653565b9150506100b5565b506000819050845160108261010f919061069b565b610119919061061f565b9050835160108261012a919061069b565b610134919061061f565b905082610142576000610145565b60015b60ff16601082610155919061069b565b61015f919061061f565b905061016a8161019e565b50505050505050565b61017c8161019e565b50565b60005481565b61019c6001600054610197919061061f565b61019e565b565b806000819055507f331bb01bcf77ec721a35a558a7984e8e6ca33b507d3ee1dd13b76f64381e54d46000546040516101d691906105a6565b60405180910390a150565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f84011261021a576102196101f5565b5b8235905067ffffffffffffffff811115610237576102366101fa565b5b602083019150836020820283011115610253576102526101ff565b5b9250929050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6102a88261025f565b810181811067ffffffffffffffff821117156102c7576102c6610270565b5b80604052505050565b60006102da6101e1565b90506102e6828261029f565b919050565b600067ffffffffffffffff82111561030657610305610270565b5b61030f8261025f565b9050602081019050919050565b82818337600083830152505050565b600061033e610339846102eb565b6102d0565b90508281526020810184848401111561035a5761035961025a565b5b61036584828561031c565b509392505050565b600082601f830112610382576103816101f5565b5b813561039284826020860161032b565b91505092915050565b600067ffffffffffffffff8211156103b6576103b5610270565b5b6103bf8261025f565b9050602081019050919050565b60006103df6103da8461039b565b6102d0565b9050828152602081018484840111156103fb576103fa61025a565b5b61040684828561031c565b509392505050565b600082601f830112610423576104226101f5565b5b81356104338482602086016103cc565b91505092915050565b60008115159050919050565b6104518161043c565b811461045c57600080fd5b50565b60008135905061046e81610448565b92915050565b6000806000806000608086880312156104905761048f6101eb565b5b600086013567ffffffffffffffff8111156104ae576104ad6101f0565b5b6104ba88828901610204565b9550955050602086013567ffffffffffffffff8111156104dd576104dc6101f0565b5b6104e98882890161036d565b935050604086013567ffffffffffffffff81111561050a576105096101f0565b5b6105168882890161040e565b92505060606105278882890161045f565b9150509295509295909350565b6000819050919050565b61054781610534565b811461055257600080fd5b50565b6000813590506105648161053e565b92915050565b6000602082840312156105805761057f6101eb565b5b600061058e84828501610555565b91505092915050565b6105a081610534565b82525050565b60006020820190506105bb6000830184610597565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061062a82610534565b915061063583610534565b925082820190508082111561064d5761064c6105f0565b5b92915050565b600061065e82610534565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036106905761068f6105f0565b5b600182019050919050565b60006106a682610534565b91506106b183610534565b92508282026106bf81610534565b915082820484148315176106d6576106d56105f0565b5b509291505056fea2646970667358221220c760ce1588615dd519acf07543c22e4998d956051ee6b770968c3193a4ab651864736f6c63430008120033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80630b85b856146100515780633fb5c1cb1461006d5780638381f58a14610089578063d09de08a146100a7575b600080fd5b61006b60048036038101906100669190610474565b6100b1565b005b6100876004803603810190610082919061056a565b610173565b005b61009161017f565b60405161009e91906105a6565b60405180910390f35b6100af610185565b005b6000805b868690508110156100fa578686828181106100d3576100d26105c1565b5b90506020020135826100e5919061061f565b915080806100f290610653565b9150506100b5565b506000819050845160108261010f919061069b565b610119919061061f565b9050835160108261012a919061069b565b610134919061061f565b905082610142576000610145565b60015b60ff16601082610155919061069b565b61015f919061061f565b905061016a8161019e565b50505050505050565b61017c8161019e565b50565b60005481565b61019c6001600054610197919061061f565b61019e565b565b806000819055507f331bb01bcf77ec721a35a558a7984e8e6ca33b507d3ee1dd13b76f64381e54d46000546040516101d691906105a6565b60405180910390a150565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f84011261021a576102196101f5565b5b8235905067ffffffffffffffff811115610237576102366101fa565b5b602083019150836020820283011115610253576102526101ff565b5b9250929050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6102a88261025f565b810181811067ffffffffffffffff821117156102c7576102c6610270565b5b80604052505050565b60006102da6101e1565b90506102e6828261029f565b919050565b600067ffffffffffffffff82111561030657610305610270565b5b61030f8261025f565b9050602081019050919050565b82818337600083830152505050565b600061033e610339846102eb565b6102d0565b90508281526020810184848401111561035a5761035961025a565b5b61036584828561031c565b509392505050565b600082601f830112610382576103816101f5565b5b813561039284826020860161032b565b91505092915050565b600067ffffffffffffffff8211156103b6576103b5610270565b5b6103bf8261025f565b9050602081019050919050565b60006103df6103da8461039b565b6102d0565b9050828152602081018484840111156103fb576103fa61025a565b5b61040684828561031c565b509392505050565b600082601f830112610423576104226101f5565b5b81356104338482602086016103cc565b91505092915050565b60008115159050919050565b6104518161043c565b811461045c57600080fd5b50565b60008135905061046e81610448565b92915050565b6000806000806000608086880312156104905761048f6101eb565b5b600086013567ffffffffffffffff8111156104ae576104ad6101f0565b5b6104ba88828901610204565b9550955050602086013567ffffffffffffffff8111156104dd576104dc6101f0565b5b6104e98882890161036d565b935050604086013567ffffffffffffffff81111561050a576105096101f0565b5b6105168882890161040e565b92505060606105278882890161045f565b9150509295509295909350565b6000819050919050565b61054781610534565b811461055257600080fd5b50565b6000813590506105648161053e565b92915050565b6000602082840312156105805761057f6101eb565b5b600061058e84828501610555565b91505092915050565b6105a081610534565b82525050565b60006020820190506105bb6000830184610597565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061062a82610534565b915061063583610534565b925082820190508082111561064d5761064c6105f0565b5b92915050565b600061065e82610534565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036106905761068f6105f0565b5b600182019050919050565b60006106a682610534565b91506106b183610534565b92508282026106bf81610534565b915082820484148315176106d6576106d56105f0565b5b509291505056fea2646970667358221220c760ce1588615dd519acf07543c22e4998d956051ee6b770968c3193a4ab651864736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3,
        "contract": "contracts/Counter.sol:Counter",
        "label": "number",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}